// <auto-generated />
using System;
using FieryRestaurant_Supplier_Model.Data_Access_Layer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FieryRestaurant.Supplier.Model.Migrations
{
    [DbContext(typeof(SupplierDbContext))]
    [Migration("20230119123739_start")]
    partial class start
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FieryRestaurant_Supplier_Domain.Address", b =>
                {
                    b.Property<string>("Supplier_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Supplier_Id");

                    b.ToTable("addresses");
                });

            modelBuilder.Entity("FieryRestaurant_Supplier_Domain.Business", b =>
                {
                    b.Property<string>("Supplier_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Business_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LicenseDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("License_No")
                        .HasColumnType("bigint");

                    b.HasKey("Supplier_Id");

                    b.ToTable("business");
                });

            modelBuilder.Entity("FieryRestaurant_Supplier_Domain.Supplier", b =>
                {
                    b.Property<string>("Supplier_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddressSupplier_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BusinessSupplier_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Supplier_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Supplier_Id");

                    b.HasIndex("AddressSupplier_Id");

                    b.HasIndex("BusinessSupplier_Id");

                    b.ToTable("suppliers");
                });

            modelBuilder.Entity("FieryRestaurant_Supplier_Domain.Supplier", b =>
                {
                    b.HasOne("FieryRestaurant_Supplier_Domain.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressSupplier_Id");

                    b.HasOne("FieryRestaurant_Supplier_Domain.Business", "Business")
                        .WithMany("Suppliers")
                        .HasForeignKey("BusinessSupplier_Id");

                    b.Navigation("Address");

                    b.Navigation("Business");
                });

            modelBuilder.Entity("FieryRestaurant_Supplier_Domain.Business", b =>
                {
                    b.Navigation("Suppliers");
                });
#pragma warning restore 612, 618
        }
    }
}
